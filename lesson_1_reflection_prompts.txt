How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helps spotting the mods, so I could quickly see where the typo was. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	Of course it will. It will give me the ability also to work in team on the same files.   

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	Pros: Knowing what has been done between two versions by entering it. Committing when a full change has been done. 
	Cons: Potential to forget to do commits and then lose some changes.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	Modification in multiple files can serve the same aim, and therefore should be saved in one commit.    


How can you use the commands git log and git diff to view the history of files?

	Git log gives me the ability to see each commit in the repository. Using two commit codes in git diff gives me the ability to see the difference between the code in the two commits.    


How might using version control make you more confident to make changes that
could break something?

    Much more confident, as I know I could go back to an old version of the code, or identify what broke something and reverse it. 

Now that you have your workspace set up, what do you want to try using Git for?

    For version control in team work.